vim: ft=build:

HP ENVY 5532 > Wireless Settings > Settings > Advanced > IP Settings > OK > Manual  -> allows tweaking of printer's address
nocodb
regular expressions

# encoding
http://daringfireball.net/projects/markdown/syntax

## ffmpeg
-filter:a afftdn=nr=90:nf=-20 removes white noise
-t length of output
-vf crop=iw:ih-80:0:0
-vf crop=width:height:x:y (height=depth below y)
ffmpeg -i <video> -vframes 1 frame.jpg  # extracts a single frame
ffmpeg -version

## Git
git -P <command>  # --no-pager
git branch -a  # lists local & remote branches
git grep <caseSensitiveText>
git init
git push gh +master  # force push to remote
git rev-parse --show-toplevel  # print the top level directory of the current repository
git show <pathToFile>  # highlights the changes
git version
GitLab Markdown
https://github.com/github/linguist/blob/master/lib/linguist/languages.yml
https://ndpsoftware.com/git-cheatsheet.html

### commits
git checkout <commit>  # go back to the commit (hash or tag)
git checkout master  # return to current state of project
git grep Log $(git rev-list --all) -- '*.ps1'  # searches all  ps1  files in all commits
git log -- *pdf  # shows if any PDF's have been inadvertently included
git log --follow *Colette*
git log -S <string>
git reset HEAD~1  # throw away last commit, keeping changes for a better one
gitk  # GUI showing files in each commit

### configurations
$MACHINE/jo/gitconfig
find . -wholename '*.git'
find . -wholename '*.git/config' > gitconfig-all.txt
find . -wholename '*.gitignore' > gitignore-all.txt
find . -wholename '*.git/config' | wc -l
gci -r .git | select fullname
gci -r .gitignore | select fullname
git config -l
git remote rename origin gh
grep -rl --include "config" harriott . > gitconfig-harriott.txt

#### lf
autocrlf = input => warning: CRLF will be replaced by LF
eol = lf

#### settings for MSWin
fgrep -rl --include "config" 'harriott' | xargs fgrep -rl 'symlinks'
grep -rl --include "config" ignorecase . | wc -l
grep -rl --include "config" symlinks . | wc -l

### the index
git checkout-index -f <somefile>  # overwrite from the index's copy
git ls-files
git reset  # clears all staged files
git rm --cached -r .  # empties the index

#### damaged
del .git\index
git reset

### user's gitconfig
$MACHINE/jo/gitconfig
$machine\troin\gitconfig
git lg

## Java
java -version
PS> where.exe java

## npm
npm list
npm prefix -g
which npm

### cspell
cspell trace "colour"  # shows which dictionary it's in
cspell check <filename>
cspell lint --help

## Pandoc
--fail-if-warnings  -> exit with error status if there are any warnings

### verbose
  [makePDF] Source:
  ...
  \end{document}

## Perl
echo "my_string" | perl -pe 's/my/your/g'
echo 'hello  there' | perl -pe 's/ +/ /'
echo hello | perl -nle 'print uc'
for ...  # = foreach ...
perl -de 0  # debug
perl -e 'print reverse <>' <file_to_reverse>
perl -le 'print a..z'

### Commant Prompt
set TERM=dumb  # allows Perl stuff to run without Terminal Size warnings

### inform
perl -h  # summary of options
perl -v
perldoc -f <function>
perldoc perldoc
perldoc perlmodlib  # bundled modules
perldoc perlrun
where.exe perl

#### @INC
perl -e 'print join qq/\n/, @INC'
perl -le '$,="\n"; print @INC'

#### modules
cpanm <moduleName>  # gets it

##### list
cpan -l > $machine\troin\cpanList.txt
instmodsh  # followed by l

### PS
perl -e 'print \"Hello World\"'
perl -e "print qq(Hello, world!)"
perl -i -ne 'printf q(%04d %s), $., $_' <file_needing_linenumbers>
perl -ne 'printf' <file_to_print>

### regex
* = 0 or more times
+ = 1 or more times
\d = [0-9]
\n = newline
\s = space, tab, newline
\w = alphanumeric or _
a{m,n} = between m & n a's

### say
say scalar @array;  # number of elements
use feature 'say';

## Python
echo $WORKON_HOME
pew ls
pip --version
pip list --outdated
pipx run pycowsay moo
python --version
python "import sys; print (sys.path)"

### MSWin
C:\Windows\py.exe
C:\Windows\pyw.exe

#### versions
PS> .'C:\Program Files\Python310\python.exe' --version
PS> C:\Users\troin\AppData\Local\Programs\Python\Python310-32\python.exe  # reports "32 bit"
PS> where.exe python

### versions
~\.pyenv
pyenv rehash
python  # reports "64 bit"
python --version

### virtualenv
cdvirtualenv  # goto the package directory
deactivate
lsvirtualenv  # lists the known environments

#### virtualenvwrapper
mkvirtualenv <name>  # also activates it
workon  # activate (or list all)

# Ghostscript convert pdf to png
gs
gswin64c -dSAFER -sDEVICE=png16m -r400 -dFirstPage=1 -dLastPage=22 -o output%02d.png input.pdf

# gpg
gpg --edit-key 13F327EF
gpg --verify file.asc [file]
gpg --version

## key servers
https://keys.openpgp.org/
https://keyserver.ubuntu.com
https://keyserver.2ndquadrant.com/

## show stuff
gpg --export-ownertrust  # shows trust settings
gpg --fingerprint jh  # neater fingerprint output
gpg --list-sigs  # --list-keys --with-sig-list
gpg -k  # --list-keys
gpg -k | xcol 13F327EF expired expires jharr sprbMb
gpg -K  # --list-secret-keys

# imagey
72 dpi = 18.3 dots per mm
COLOR TOOLS  http://html-color-codes.info/

## ImageMagick
identify -format '%w %h %f \n' *  # images listed by size
montage <left> <right> -geometry +9+9 -tile 2x1 <lr>

### convert
can convert from WebP
convert -flatten img.png img-white.png

#### Bash
convert -flatten transparent.png white_background.png
convert -list
convert -list color
convert -list gravity
convert <colourimage> -colorspace Gray <grayimage>
convert <people> -paint 9 <people-oil>
convert <positive> -negate <negative>
for i in $(ls); do convert -resize 10% $i r$i; done
for i in $(ls); do convert -resize 15% $i r$i; done
for i in $(ls); do convert -resize 25% $i r$i; done
for i in $(ls); do convert -resize 50% $i r$i; done

#### Powershell tiff -> jpg recursively convert
  gci -r *.tiff | %{ magick $_ $_'.jpg' }
  gci -r *.tiff | rm

### gravity
-gravity northwest  -> the default
convert -list gravity

## VLC Player
- -> slow down by .1x
+ -> speed up by .1x for each press
= -> returns speed to normal
A -> to Change Aspect ratio
b -> to rotate through Audio tracks
v -> to rotate through Subtitles

# internetworking
curl ifconfig.co/city
curl ifconfig.co/country
https://www.gps-coordinates.net
trashinbox
web colors
yt-dlp -F <videoURL>
yt-dlp -f best <videoURL>
yt-dlp -f ba <videoURL>  # bestaudio (= best*[vcodec=none])
yt-dlp --version

## Thunderbird
$DROPBOX/JH/TP-default-release/compatibility.ini  for LastVersion
Alt+t > a (= Extensions)
Alt+t > e (= Edit) > a a (= Account Settings)
Alt+t > Manually sort folders
Ctrl+Shft+B => Address Book
Menu > File > Compact Folders
right-click on folder > Properties > Repair Folder
C:\MozillaThunderbird\thunderbird.exe -addressbook

### tbkeys-lite Main key bindings
    "j": "cmd:cmd_nextMsg",
    "k": "cmd:cmd_previousMsg",
    "o": "cmd:cmd_openMessage",
    "f": "cmd:cmd_forward",
    "#": "cmd:cmd_delete",
    "r": "cmd:cmd_reply",
    "a": "cmd:cmd_replyall",
    "x": "cmd:cmd_archive",
    "c": "func:MsgNewMessage",
    "u": "tbkeys:closeMessageAndRefresh"

## wttr.in
curl wttr.in/London
curl wttr.in/Newcastle

# LaTeX
$IT1/Cross-platform/TeX/LaTeX/dts-tex.txt  has tests
\pagebreak
\section*{ unnumbered section }
\stepcounter{section} % increase section number by 1
\tableofcontents*  % ToC without itself listed therein
\textbf{...}
\textit{...}
\textsubscript{}
\textsuperscript{}
\the\length  % prints that length
\today
\usepackage{soul}  % Hyphenation for letterspacing, underlining, and more
\usepackage{titlesec}  % incompatible with memoir
\vfill

## font sizes
\tiny
\scriptsize
\footnotesize
\small
\normalsize
\large
\Large
\LARGE
\huge
\Huge

## fonts - Indic
FreeFont
Lohit used by Wikipedia

## geometry
hmargin={<left margin>,<right margin>}
vmargin={<top margin>,<bottom margin>}

## indents
\noindent
\setlength{\parindent}{0pt}

## Memoir
\defaultlists
\setlength{\parindent}{0pt}
\tightlists
extrafontsizes

### simple footer
\usepackage{currfile}
  \makeevenfoot{plain}{}{\cg {\currfilename}}{}
   \makeoddfoot{plain}{}{\cg {\currfilename}}{}

## MiKTeX
initexmf --report

### FNDB
after filename changes in  C:\Users\troin\AppData\Roaming\MiKTeX\tex\
  initexmf --update-fndb
  MiKTeX Console > Tasks > Refresh file name database

### MiKTeX Package Manager
mpm --list > "MiKTeX-packageDB-$(Get-Date -f yyMMdd-hhmm).txt"
mpm --update  # all packages
mpm --verify  # integrity of all installed packages
mpm --version

## multicols
\usepackage{multicol}
...
\begin{document}
\begin{multicols}{3}
...
\end{multicols}

## pdfpages
doesn't respect geometry margins, so  \includepdfset{offset=<fromInnerEdge> <fromTop>}
\includepdf[options]{<pdf>}

# LibreOffice
- Alt+F12 (=Tools > Options)
- Sheets: Ctrl+1 (= Format Cells) allows French

## Export
Alt+f (= File) > t (= Export)
defaults to GIF in Draw
defaults to JPEG in Calc

# The Platinum Searcher
pt
pt /version
pt Solange .
# screens
Sony Xperia 10 II: 1080x2520 = 21:9

## widescreen 16:9
854x480
1280x720 = 720p = "HD Ready"
1600x900
1920x1080

# Stack Exchange Network
@petersmith = Peter Smith
CommonMark Implementations
highlight.js

# Sumatra PDF
Ctrl+6         - View Single pages
Ctrl+7         - View Facing pages
Ctrl+Shift+Tab - go to previous tab
Ctrl+Tab       - go to next tab
r              - reload
z              - toggle zoom between Fit Page, Fit Width, Fit Content

# text-to-speech
espeak "Hello World!"

## French
espeak -v fr "Votre texte Ã  lire..."
espeak -v fr+f2 "Bonjour tout le monde"

# text wrangling
carriage return (U+000D) returns the cursor to the left of the line (usually just before line feed on MSWin)
finding characters

## vim
$HOME/.viminfo
$HOME/_viminfo
$ITstack/vimfiles/spell/fr.utf-8.add
^M = carriage return
gci -r tags -force | where { ! $_.PSIsContainer } | select -expandProperty fullname > tags-Win10.txt
[g]vim .  # will open netrw on current directory

### gVim
gvim -O <textfile0> <textfile1>  # opens them in a vertical split
gvim -S <savedSession>

#### window size
gvim -geometry 200x55
PS> gvim -c "set columns=217 lines=54"  # maximum on a 1600x900 screen with rhs taskbar

### on GNU/Linux
find . -type f -name tags
e -la /usr/bin/vim
file "$(command -v vim)"

